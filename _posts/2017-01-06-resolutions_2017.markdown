---
layout: post
title: Resolutions 2017
date: 2017-01-06 23:45:01
---
Ahh, a new year. A fresh excuse to imagine everything will change, and a chance to project overly ambitious goals onto your future self. This year I've got one relatively ambitious goal, and a few [systems](http://blog.dilbert.com/post/102964992706/goals-vs-systems) aimed at helping me support that goal. For the sake of not backing out, I'll publicly document the new plan here.

The systems:

- Watch less television. I certainly don't watch the most television of anyone I know, but I also don't watch the least. The majority of the time I do spend with the TV on is probably spent multitasking. I often get home from work and put something on in the background while I clear my inbox, or do some low priority and/or braindead task. Separating this practice into chores and TV will likely increase my productivity and decrease my TV time. If it doesn't, then I just need to cut TV out.
- Read less news. I think over the course of the last presidential election cycle(2 yearsâ€½) my news checking habits moved from healthy to addiction. Like some sort of junkie I would feel a light headed feeling as I looked up, dazed, wondering how much time had passed since I'd last looked at the world unfiltered. It sounds like not such a bad thing, but information can be a terrible drug to be hooked on. There is much more enlightening activity in the world than the hamster wheel that is keeping up with the world's latest information. "Fake news" has gotten a lot of coverage since the election, but it is only one side of the problem. As more dishonest news sources appear, reputable sources are simultaneously lowering their standards. This is due in large part to the way successful news companies are measured and monetized, to get more readers news sites are rushed to publish interesting articles before their competitors. So is there a model that doesn't incentivize news to rush for readership? The obvious answer is paid subscriptions, but beyond that? I think the newsletter format harkens back to a cleaner model of news delivery, entrusting informed sources to deliver quality news in a timely manner. So to the best of my control I will rely on newsletters when possible.
- Say "no" to more things. I wish I could find where, but somewhere over the last year I read a quote along the lines of "Saying 'no' is saying no to one thing, saying 'yes' is saying no to a million things." This so clearly elucidates the opportunity cost that goes along with any activity. It's hard to imagine that I wasn't already aware of that line of thought, but something about its simplicity hung with me, and has weighed on me since. I'm hoping my biggest time gains come out of rejecting more opportunities.

All of these are supposed to be in the service of freeing up more time to work on my larger goal: <br/>__One hack a month.__ Bonus points for an accompanying blog post. The emphasis will be on gaining exposure and giving support to technologies that interest me. These will likely be either directly or indirectly related to my job, as that's what I spend most of my time thinking about. A short but non-exhaustive list of what may be included is blockchains, cryptography, decentralization, protocols, and testing. Ideally it will be a mix of MVP hacks and open source contributions to libraries that I would like to support.

For my first month I'm actually going to add support for transaction replays to my ethereum wallet gem [Eth](https://github.com/se3000/ruby-eth). Implementing this involves familiarizing myself more with the signing code that is OpenSSL related, but will hopefully be applicable to my intended work of integrating with libsecp256k1. Additionally, I'd like to close out open issues and add the support and documentation that I've come to expect from well run open source libraries. Along with that, I pulled out a gem of shared code between eth and the Ethereum [ruby full node](https://github.com/janx/ruby-ethereum) implementation. My gem uses it, but the full node does not yet, so I'd like to get a pull request in for that. You've already read this month's accompanying hack blog post.
